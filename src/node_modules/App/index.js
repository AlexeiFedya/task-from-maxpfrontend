import React, { Component } from 'react';

import { BrowserRouter as Router, Route, Switch, Redirect } from "react-router-dom"
import {connect} from 'react-redux'
import PropTypes from 'prop-types'

import 'bootstrap/dist/css/bootstrap.min.css'
import './index.css'
import TopLine from 'Components/TopLine'
import Home from 'Components/Home'
import News from 'Components/News'
import Profile from 'Components/Profile'
import NotFound from 'Components/NotFound'
import Login from 'Components/Login'
// import PrivateRoute from 'Components/PrivateRoutes'

class App extends Component {
  render() {
    return (
    	
    		<Router>
		      <div className="App">
		      	<div className="content">
				      <TopLine />
			      
				      <Switch>
				      	<Route path="/" exact component={Home} />
				      	<Route path="/news" component={News} />
				      	<PrivateRoute authenticated={this.props.login} path="/profile" component={Profile} />
				      	<Route path="/login" component={Login} />
				      	<Route path="*" component={NotFound} />
				      </Switch>
				    </div>
			      <footer>
			      	<div className="container">
			      		<div className="row d-flex flex-wrap justify-content-center">
                  <div className="col-auto">Made in <b>white1984j</b></div>
                  <div className="col-auto">
                    <a href="https://vk.com/white1984j" target="_blank"><i class="fab fa-vk"></i> vk.com/white1984j</a>
                  </div>
                  <div className="col-auto">
                    <a href="https://github.com/white1984j" target="_blank"><i class="fab fa-github"></i> github.com/white1984j</a>
                  </div>
                  <div className="col-auto">
                    <a href="mailto:white1984j@gmail.com" target="_blank"><i class="fas fa-envelope"></i> white1984j@gmail.com</a>
                  </div>
                </div>
			      	</div>
			      </footer>
				  </div>
		    </Router>
	    
    );
  }
}

function PrivateRoute ({component: Component, authenticated, ...rest}) {
  return (
    <Route
      {...rest}
      render={(props) => authenticated === true
        ? <Component {...props} />
        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}
    />
  )
}


App.propTypes = {
	login: PropTypes.bool.isRequired
}

const mapStateToProps = (state) => ({ login: state.login.login })

export default connect(mapStateToProps)(App);
