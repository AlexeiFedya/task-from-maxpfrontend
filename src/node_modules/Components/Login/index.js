import React, {Component} from 'react'
import {connect} from 'react-redux'
import {
	Form,
	FormGroup,
	Label,
	Input,
	Button,
	Alert
} from 'reactstrap'
import PropTypes from 'prop-types'
import {Redirect} from 'react-router'

import {actionLogin} from 'Actions'

class Login extends Component{
	constructor(props){
		super(props)
		this.state = {
			login: "",
			password: ""
		}
	}
	onChangeInput = (name, e) => {
		const value = e.target.value
		this.setState( prevState => {
			return { [name]: value }
		})
	}
	onSubmit = (e) => {
		if( this.props.connecting ){
			e.preventDefault();
			return false;
		}
		this.props.actionLogin( this.state )
		this.setState( prevState => {
			return {
				password: ''
			}
		})

		e.preventDefault();
	}
	render(){

		const getBody = () => {
			return <div className="row">
					<div className="col-md-5">
						<form onSubmit={this.onSubmit}>
							{ this.props.error ? <Alert color="danger">Имя пользователя или пароль введены не верно</Alert> : '' }
			        <FormGroup>
			          <Label for="exampleEmail">Login</Label>
			          <Input type="text" name="login" id="exampleEmail" value={this.state.login} onChange={this.onChangeInput.bind(null, 'login')} />
			        </FormGroup>
			        <FormGroup>
			          <Label for="examplePassword">Password</Label>
			          <Input type="password" name="password" id="examplePassword" value={this.state.password} onChange={this.onChangeInput.bind(null, 'password')} />
			        </FormGroup>
			        <Button type="submit" onClick={this.onSubmit} color="primary" className={this.props.connecting ? 'disabled w-100' : 'w-100'} >
			        	{this.props.connecting ? <i className="fa fa-spinner fa-spin"></i> : 'Login'}
			        </Button>
			      </form>
			    </div>
		    </div>
		}
		return(
			<div className="container">
				{	this.props.login ? <Redirect to="/profile"/> : getBody()}
			</div>
		)
	}
}

Login.propTypes = {
	login: PropTypes.bool.isRequired,
	connecting: PropTypes.bool.isRequired,
	error: PropTypes.bool.isRequired
}

const mapStateToProps = (state) => ({
	login: state.login.login,
	connecting: state.login.connecting,
	error: state.login.error
})

const mapDispatchToProps = (dispatch) => ({actionLogin: (form) => dispatch(actionLogin(form))})

export default connect(mapStateToProps, mapDispatchToProps)(Login)