import React, {Component} from 'react'
import {connect} from 'react-redux'
import {requestPersonalInfo} from 'Actions'

import './style.css'

class Profile extends Component{
	constructor(props){
		super(props);
		this.state = {
			// loading: false,
			// loaded: false,
			// error: false
		}
	}
	componentDidMount(){
		this.props.requestPersonalInfo(this.props.id)

		this.setState(() => {
			return {
				loading: true
			};
		})
	}
	render(){
		const getBody = () => {
			const {loading, data, error} = this.props
			if( loading){
				return(
					<p><i className="fa fa-spinner fa-spin"></i></p>
				)
			}
			if( error){
				return(
					<p className="error">Error</p>
				)
			}
			if( data ){
				const {city, languages, social} = data
				const getLanguages = (languages) => {
					return languages.map((item, i) => <li key={i}>{item}</li>)
				}
				const getSocial = (social) => {
					return social.reduce((acc, item, i) => {
						if( item.label === 'web' ){
							acc.unshift(<li key={i}>
								<a href={item.link} target="_blank">
									<i className={'fas fa-globe'}></i>
									{item.label}
								</a>
							</li>)
						}else{
							acc.push(<li key={i}>
								<a href={item.link} target="_blank">
									<i className={'fab fa-'+ item.label}></i>
									{item.label}
								</a>
							</li>)
						}
						return acc
					},[])
				}
				return(
					<div>
						<p><b>Город:</b>: {city}</p>
						<p><b>Знание языков:</b></p>
						<ul className="languages-list">{getLanguages(languages)}</ul>
						
						<p><b>Ссылки:</b></p>
						<ul className="social-list">{getSocial(social)}</ul>
						
					</div>
				)
			}
		}
		return(
			<div className="container">
				{ getBody() }
			</div>
		)
	}
}

const mapStateToProps = (state) => ({ 
	id: state.login.id,
	loading: state.personalInfo.loading,
	error: state.personalInfo.error,
	data: state.personalInfo.data,
})
const mapDispatchToProps = (dispatch) => ({
	requestPersonalInfo: (id) => dispatch(requestPersonalInfo(id))
})

export default connect(mapStateToProps, mapDispatchToProps)(Profile)